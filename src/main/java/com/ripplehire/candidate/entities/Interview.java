package com.ripplehire.candidate.entities;
// Generated 30 Mar, 2017 11:21:44 AM by Hibernate Tools 5.2.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.*;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Interview generated by hbm2java
 */
@Entity
@Table(name = "interview")
public class Interview implements java.io.Serializable {

	private Integer interviewSeq;
	private InterviewDetails interviewDetails;
	private int companyMstrSeq;
	private String interviewType;
	private String interviewStatus;
	private char status;
	private int createdBy;
	private Date createDttm;
	private Integer updatedBy;
	private Date updateDttm;
    private Set<InterviewKitInterviewMap> interviewKitInterviewMaps = new HashSet<InterviewKitInterviewMap>(0);
    private Set<InterviewReview> interviewReviews = new HashSet<InterviewReview>(0);
	private Set<InterviewSchedule> interviewSchedules = new HashSet<InterviewSchedule>(0);
	private Set<InterviewComments> interviewCommentses = new HashSet<InterviewComments>(0);
	private Set<InterviewFeedbackComments> interviewFeedbackCommentses = new HashSet<InterviewFeedbackComments>(0);
	private Set<InterviewFeedbackAnswers> interviewFeedbackAnswerses = new HashSet<InterviewFeedbackAnswers>(0);
	private Set<Interviewer> interviewers = new HashSet<Interviewer>(0);
	private Set<InterviewScheduleHistory> interviewScheduleHistories = new HashSet<InterviewScheduleHistory>(0);


	public Interview() {
	}

	public Interview(InterviewDetails interviewDetails, int companyMstrSeq,
			String interviewType, String interviewStatus, char status, int createdBy, Date createDttm) {
		this.interviewDetails = interviewDetails;
		this.companyMstrSeq = companyMstrSeq;
		this.interviewType = interviewType;
		this.interviewStatus = interviewStatus;
		this.status = status;
		this.createdBy = createdBy;
		this.createDttm = createDttm;
	}

    public Interview(Integer interviewSeq, InterviewDetails interviewDetails, int companyMstrSeq, String interviewType, String interviewStatus, char status, int createdBy, Date createDttm, Integer updatedBy, Date updateDttm, Set<InterviewKitInterviewMap> interviewKitInterviewMaps, Set<InterviewReview> interviewReviews, Set<InterviewSchedule> interviewSchedules, Set<InterviewComments> interviewCommentses, Set<InterviewFeedbackComments> interviewFeedbackCommentses, Set<InterviewFeedbackAnswers> interviewFeedbackAnswerses, Set<Interviewer> interviewers, Set<InterviewScheduleHistory> interviewScheduleHistories) {
        this.interviewSeq = interviewSeq;
        this.interviewDetails = interviewDetails;
        this.companyMstrSeq = companyMstrSeq;
        this.interviewType = interviewType;
        this.interviewStatus = interviewStatus;
        this.status = status;
        this.createdBy = createdBy;
        this.createDttm = createDttm;
        this.updatedBy = updatedBy;
        this.updateDttm = updateDttm;
        this.interviewKitInterviewMaps = interviewKitInterviewMaps;
        this.interviewReviews = interviewReviews;
        this.interviewSchedules = interviewSchedules;
        this.interviewCommentses = interviewCommentses;
        this.interviewFeedbackCommentses = interviewFeedbackCommentses;
        this.interviewFeedbackAnswerses = interviewFeedbackAnswerses;
        this.interviewers = interviewers;
        this.interviewScheduleHistories = interviewScheduleHistories;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

	@Column(name = "INTERVIEW_SEQ", unique = true, nullable = false)
	public Integer getInterviewSeq() {
		return this.interviewSeq;
	}

	public void setInterviewSeq(Integer interviewSeq) {
		this.interviewSeq = interviewSeq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "INTERVIEW_DETAILS_SEQ", nullable = false)
	public InterviewDetails getInterviewDetails() {
		return this.interviewDetails;
	}

	public void setInterviewDetails(InterviewDetails interviewDetails) {
		this.interviewDetails = interviewDetails;
	}

	@Column(name = "COMPANY_MSTR_SEQ", nullable = false)
	public int getCompanyMstrSeq() {
		return this.companyMstrSeq;
	}

	public void setCompanyMstrSeq(int companyMstrSeq) {
		this.companyMstrSeq = companyMstrSeq;
	}

	@Column(name = "INTERVIEW_TYPE", nullable = false, length = 50)
	public String getInterviewType() {
		return this.interviewType;
	}

	public void setInterviewType(String interviewType) {
		this.interviewType = interviewType;
	}

	@Column(name = "INTERVIEW_STATUS", nullable = false, length = 50)
	public String getInterviewStatus() {
		return this.interviewStatus;
	}

	public void setInterviewStatus(String interviewStatus) {
		this.interviewStatus = interviewStatus;
	}

	@Column(name = "STATUS", nullable = false, length = 1)
	public char getStatus() {
		return this.status;
	}

	public void setStatus(char status) {
		this.status = status;
	}

	@Column(name = "CREATED_BY", nullable = false)
	public int getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(int createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATE_DTTM", nullable = false, length = 19)
	public Date getCreateDttm() {
		return this.createDttm;
	}

	public void setCreateDttm(Date createDttm) {
		this.createDttm = createDttm;
	}

	@Column(name = "UPDATED_BY")
	public Integer getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATE_DTTM", length = 19)
	public Date getUpdateDttm() {
		return this.updateDttm;
	}

	public void setUpdateDttm(Date updateDttm) {
		this.updateDttm = updateDttm;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "interview")
	public Set<InterviewReview> getInterviewReviews() {
		return this.interviewReviews;
	}

	public void setInterviewReviews(Set<InterviewReview> interviewReviews) {
		this.interviewReviews = interviewReviews;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "interview")
	public Set<InterviewSchedule> getInterviewSchedules() {
		return this.interviewSchedules;
	}

	public void setInterviewSchedules(Set<InterviewSchedule> interviewSchedules) {
		this.interviewSchedules = interviewSchedules;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "interview")
	public Set<InterviewComments> getInterviewCommentses() {
		return this.interviewCommentses;
	}

	public void setInterviewCommentses(Set<InterviewComments> interviewCommentses) {
		this.interviewCommentses = interviewCommentses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "interview")
	public Set<InterviewFeedbackComments> getInterviewFeedbackCommentses() {
		return this.interviewFeedbackCommentses;
	}

	public void setInterviewFeedbackCommentses(Set<InterviewFeedbackComments> interviewFeedbackCommentses) {
		this.interviewFeedbackCommentses = interviewFeedbackCommentses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "interview")
	public Set<InterviewFeedbackAnswers> getInterviewFeedbackAnswerses() {
		return this.interviewFeedbackAnswerses;
	}

	public void setInterviewFeedbackAnswerses(Set<InterviewFeedbackAnswers> interviewFeedbackAnswerses) {
		this.interviewFeedbackAnswerses = interviewFeedbackAnswerses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "interview")
	public Set<Interviewer> getInterviewers() {
		return interviewers;
	}

	public void setInterviewers(Set<Interviewer> interviewers) {
		this.interviewers = interviewers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "interview")
	public Set<InterviewScheduleHistory> getInterviewScheduleHistories() {
		return this.interviewScheduleHistories;
	}

	public void setInterviewScheduleHistories(Set<InterviewScheduleHistory> interviewScheduleHistories) {
		this.interviewScheduleHistories = interviewScheduleHistories;
	}

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "interview")
    public Set<InterviewKitInterviewMap> getInterviewKitInterviewMaps() {
        return interviewKitInterviewMaps;
    }

    public void setInterviewKitInterviewMaps(Set<InterviewKitInterviewMap> interviewKitInterviewMaps) {
        this.interviewKitInterviewMaps = interviewKitInterviewMaps;
    }

}
