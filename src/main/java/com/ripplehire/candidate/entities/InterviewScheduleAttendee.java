package com.ripplehire.candidate.entities;
// Generated 30 Mar, 2017 11:21:44 AM by Hibernate Tools 5.2.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * InterviewScheduleAttendee generated by hbm2java
 */
@Entity
@Table(name = "interview_schedule_attendee")
public class InterviewScheduleAttendee implements java.io.Serializable {

    private Integer interviewScheduleAttendeeSeq;
    private InterviewSchedule interviewSchedule;
    private UserProfile mailTo;
    private int companyMstrSeq;
    private String userType;
    private String attendeeStatus;
    private Interviewer interviewer;
    private char status;
    private int createdBy;
    private Date createDttm;
    private Integer updatedBy;
    private Date updateDttm;
    private Set<InterviewTask> interviewTasks = new HashSet<InterviewTask>(0);

    public InterviewScheduleAttendee() {
    }

    public InterviewScheduleAttendee(InterviewSchedule interviewSchedule, UserProfile mailTo, int companyMstrSeq,
                                     String userType, String attendeeStatus, char status, int createdBy, Date createDttm) {
        this.interviewSchedule = interviewSchedule;
        this.mailTo = mailTo;
        this.companyMstrSeq = companyMstrSeq;
        this.userType = userType;
        this.attendeeStatus = attendeeStatus;
        this.status = status;
        this.createdBy = createdBy;
        this.createDttm = createDttm;
    }

    public InterviewScheduleAttendee(InterviewSchedule interviewSchedule, UserProfile mailTo, int companyMstrSeq,
                                     String userType, String attendeeStatus, char status, int createdBy, Date createDttm, Integer updatedBy,
                                     Date updateDttm, Set<InterviewTask> interviewTasks) {
        this.interviewSchedule = interviewSchedule;
        this.mailTo = mailTo;
        this.companyMstrSeq = companyMstrSeq;
        this.userType = userType;
        this.attendeeStatus = attendeeStatus;
        this.status = status;
        this.createdBy = createdBy;
        this.createDttm = createDttm;
        this.updatedBy = updatedBy;
        this.updateDttm = updateDttm;
        this.interviewTasks = interviewTasks;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "INTERVIEW_SCHEDULE_ATTENDEE_SEQ", unique = true, nullable = false)
    public Integer getInterviewScheduleAttendeeSeq() {
        return this.interviewScheduleAttendeeSeq;
    }

    public void setInterviewScheduleAttendeeSeq(Integer interviewScheduleAttendeeSeq) {
        this.interviewScheduleAttendeeSeq = interviewScheduleAttendeeSeq;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "INTERVIEW_SCHEDULE_SEQ", nullable = false)
    public InterviewSchedule getInterviewSchedule() {
        return this.interviewSchedule;
    }

    public void setInterviewSchedule(InterviewSchedule interviewSchedule) {
        this.interviewSchedule = interviewSchedule;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "MAIL_TO", nullable = false)
    public UserProfile getMailTo() {
        return mailTo;
    }

    public void setMailTo(UserProfile mailTo) {
        this.mailTo = mailTo;
    }

    @Column(name = "COMPANY_MSTR_SEQ", nullable = false)
    public int getCompanyMstrSeq() {
        return this.companyMstrSeq;
    }

    public void setCompanyMstrSeq(int companyMstrSeq) {
        this.companyMstrSeq = companyMstrSeq;
    }

    @Column(name = "USER_TYPE", nullable = false, length = 20)
    public String getUserType() {
        return this.userType;
    }

    public void setUserType(String userType) {
        this.userType = userType;
    }

    @Column(name = "ATTENDEE_STATUS", nullable = false, length = 10)
    public String getAttendeeStatus() {
        return this.attendeeStatus;
    }

    public void setAttendeeStatus(String attendeeStatus) {
        this.attendeeStatus = attendeeStatus;
    }

    @Column(name = "STATUS", nullable = false, length = 1)
    public char getStatus() {
        return this.status;
    }

    public void setStatus(char status) {
        this.status = status;
    }

    @Column(name = "CREATED_BY", nullable = false)
    public int getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(int createdBy) {
        this.createdBy = createdBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATE_DTTM", nullable = false, length = 19)
    public Date getCreateDttm() {
        return this.createDttm;
    }

    public void setCreateDttm(Date createDttm) {
        this.createDttm = createDttm;
    }

    @Column(name = "UPDATED_BY")
    public Integer getUpdatedBy() {
        return this.updatedBy;
    }

    public void setUpdatedBy(Integer updatedBy) {
        this.updatedBy = updatedBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "UPDATE_DTTM", length = 19)
    public Date getUpdateDttm() {
        return this.updateDttm;
    }

    public void setUpdateDttm(Date updateDttm) {
        this.updateDttm = updateDttm;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "interviewScheduleAttendee")
    public Set<InterviewTask> getInterviewTasks() {
        return this.interviewTasks;
    }

    public void setInterviewTasks(Set<InterviewTask> interviewTasks) {
        this.interviewTasks = interviewTasks;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "INTERVIEWER_SEQ", nullable = false)
    public Interviewer getInterviewer() {
        return this.interviewer;
    }

    public void setInterviewer(Interviewer interviewer) {
        this.interviewer = interviewer;
    }

}