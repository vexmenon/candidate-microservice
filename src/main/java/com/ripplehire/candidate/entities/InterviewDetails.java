package com.ripplehire.candidate.entities;
// Generated 30 Mar, 2017 11:21:44 AM by Hibernate Tools 5.2.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * InterviewDetails generated by hbm2java
 */
@Entity
@Table(name = "interview_details")
public class InterviewDetails implements java.io.Serializable {

	private Integer interviewDetailSeq;
	private ClientInterviewStatus clientInterviewStatus;
	private EmplRefrl emplRefrl;
	private InterviewDetails interviewDetails;
	private InterviewStageMstr interviewStageMstr;
	private int companyMstrSeq;
	private String interviewFeedback;
	private String interviewResult;
	private String rejectReason;
	private String shiftStatus;
	private char status;
	private int createdBy;
	private Date createDttm;
	private Integer updatedBy;
	private Date updateDttm;
	private String comment;
	private Set<Interview> interviews = new HashSet<Interview>(0);
	private Set<InterviewComments> interviewCommentses = new HashSet<InterviewComments>(0);
	private Set<EmplRefrl> emplRefrls = new HashSet<EmplRefrl>(0);
	private Set<InterviewSkillRating> interviewSkillRatings = new HashSet<InterviewSkillRating>(0);
	private Set<Interviewer> interviewers = new HashSet<Interviewer>(0);
	private Set<InterviewDetails> interviewDetailses = new HashSet<InterviewDetails>(0);

	public InterviewDetails() {
	}

	public InterviewDetails(EmplRefrl emplRefrl, int companyMstrSeq, char status, int createdBy, Date createDttm) {
		this.emplRefrl = emplRefrl;
		this.companyMstrSeq = companyMstrSeq;
		this.status = status;
		this.createdBy = createdBy;
		this.createDttm = createDttm;
	}

	public InterviewDetails(ClientInterviewStatus clientInterviewStatus, EmplRefrl emplRefrl,
							InterviewDetails interviewDetails, InterviewStageMstr interviewStageMstr, int companyMstrSeq,
							String interviewFeedback, String interviewResult, String rejectReason, String shiftStatus, char status,
							int createdBy, Date createDttm, Integer updatedBy, Date updateDttm, String comment,
							Set<Interview> interviews, Set<InterviewComments> interviewCommentses,
							Set<EmplRefrl> emplRefrls, Set<InterviewSkillRating> interviewSkillRatings, Set<Interviewer> interviewers,
							Set<InterviewDetails> interviewDetailses) {
		this.clientInterviewStatus = clientInterviewStatus;
		this.emplRefrl = emplRefrl;
		this.interviewDetails = interviewDetails;
		this.interviewStageMstr = interviewStageMstr;
		this.companyMstrSeq = companyMstrSeq;
		this.interviewFeedback = interviewFeedback;
		this.interviewResult = interviewResult;
		this.rejectReason = rejectReason;
		this.shiftStatus = shiftStatus;
		this.status = status;
		this.createdBy = createdBy;
		this.createDttm = createDttm;
		this.updatedBy = updatedBy;
		this.updateDttm = updateDttm;
		this.comment = comment;
		this.interviews = interviews;
		this.interviewCommentses = interviewCommentses;
		this.emplRefrls = emplRefrls;
		this.interviewSkillRatings = interviewSkillRatings;
		this.interviewers = interviewers;
		this.interviewDetailses = interviewDetailses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "INTERVIEW_DETAIL_SEQ", unique = true, nullable = false)
	public Integer getInterviewDetailSeq() {
		return this.interviewDetailSeq;
	}

	public void setInterviewDetailSeq(Integer interviewDetailSeq) {
		this.interviewDetailSeq = interviewDetailSeq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CLIENT_INTERVIEW_STATUS_SEQ")
	public ClientInterviewStatus getClientInterviewStatus() {
		return this.clientInterviewStatus;
	}

	public void setClientInterviewStatus(ClientInterviewStatus clientInterviewStatus) {
		this.clientInterviewStatus = clientInterviewStatus;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EMPL_REFRL_SEQ", nullable = false)
	public EmplRefrl getEmplRefrl() {
		return this.emplRefrl;
	}

	public void setEmplRefrl(EmplRefrl emplRefrl) {
		this.emplRefrl = emplRefrl;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PARENT_INTERVIEW_DETAIL_SEQ")
	public InterviewDetails getInterviewDetails() {
		return this.interviewDetails;
	}

	public void setInterviewDetails(InterviewDetails interviewDetails) {
		this.interviewDetails = interviewDetails;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "INTERVIEW_STAGE_MSTR_SEQ")
	public InterviewStageMstr getInterviewStageMstr() {
		return this.interviewStageMstr;
	}

	public void setInterviewStageMstr(InterviewStageMstr interviewStageMstr) {
		this.interviewStageMstr = interviewStageMstr;
	}

	@Column(name = "COMPANY_MSTR_SEQ", nullable = false)
	public int getCompanyMstrSeq() {
		return this.companyMstrSeq;
	}

	public void setCompanyMstrSeq(int companyMstrSeq) {
		this.companyMstrSeq = companyMstrSeq;
	}

	@Column(name = "INTERVIEW_FEEDBACK")
	public String getInterviewFeedback() {
		return this.interviewFeedback;
	}

	public void setInterviewFeedback(String interviewFeedback) {
		this.interviewFeedback = interviewFeedback;
	}

	@Column(name = "INTERVIEW_RESULT", length = 200)
	public String getInterviewResult() {
		return this.interviewResult;
	}

	public void setInterviewResult(String interviewResult) {
		this.interviewResult = interviewResult;
	}

	@Column(name = "REJECT_REASON", length = 200)
	public String getRejectReason() {
		return this.rejectReason;
	}

	public void setRejectReason(String rejectReason) {
		this.rejectReason = rejectReason;
	}

	@Column(name = "SHIFT_STATUS", length = 200)
	public String getShiftStatus() {
		return this.shiftStatus;
	}

	public void setShiftStatus(String shiftStatus) {
		this.shiftStatus = shiftStatus;
	}

	@Column(name = "STATUS", nullable = false, length = 1)
	public char getStatus() {
		return this.status;
	}

	public void setStatus(char status) {
		this.status = status;
	}

	@Column(name = "CREATED_BY", nullable = false)
	public int getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(int createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATE_DTTM", nullable = false, length = 19)
	public Date getCreateDttm() {
		return this.createDttm;
	}

	public void setCreateDttm(Date createDttm) {
		this.createDttm = createDttm;
	}

	@Column(name = "UPDATED_BY")
	public Integer getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATE_DTTM", length = 19)
	public Date getUpdateDttm() {
		return this.updateDttm;
	}

	public void setUpdateDttm(Date updateDttm) {
		this.updateDttm = updateDttm;
	}

	@Column(name = "COMMENT", length = 50)
	public String getComment() {
		return this.comment;
	}

	public void setComment(String comment) {
		this.comment = comment;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "interviewDetails")
	public Set<Interview> getInterviews() {
		return this.interviews;
	}

	public void setInterviews(Set<Interview> interviews) {
		this.interviews = interviews;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "interviewDetails")
	public Set<InterviewComments> getInterviewCommentses() {
		return this.interviewCommentses;
	}

	public void setInterviewCommentses(Set<InterviewComments> interviewCommentses) {
		this.interviewCommentses = interviewCommentses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "interviewDetails")
	public Set<EmplRefrl> getEmplRefrls() {
		return this.emplRefrls;
	}

	public void setEmplRefrls(Set<EmplRefrl> emplRefrls) {
		this.emplRefrls = emplRefrls;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "interviewDetails")
	public Set<InterviewSkillRating> getInterviewSkillRatings() {
		return this.interviewSkillRatings;
	}

	public void setInterviewSkillRatings(Set<InterviewSkillRating> interviewSkillRatings) {
		this.interviewSkillRatings = interviewSkillRatings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "interviewDetails")
	public Set<Interviewer> getInterviewers() {
		return this.interviewers;
	}

	public void setInterviewers(Set<Interviewer> interviewers) {
		this.interviewers = interviewers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "interviewDetails")
	public Set<InterviewDetails> getInterviewDetailses() {
		return this.interviewDetailses;
	}

	public void setInterviewDetailses(Set<InterviewDetails> interviewDetailses) {
		this.interviewDetailses = interviewDetailses;
	}

}