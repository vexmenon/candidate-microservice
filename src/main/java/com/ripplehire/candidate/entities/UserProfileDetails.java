package com.ripplehire.candidate.entities;




import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * UserProfileDetails generated by hbm2java
 */
@Entity
@Table(name = "user_profile_details")
public class UserProfileDetails implements java.io.Serializable {

    private Integer userProfileDetailsSeq;
    private UserProfile userProfile;
    private String userImageSubDirectory;
    private String userImageUrl;
    private Character userShowImage;
    private String imageSrc;
    private Character status;
    private Integer createdBy;
    private Date createdDttm;
    private int updatedBy;
    private Date updatedDttm;

    public UserProfileDetails() {
    }

    public UserProfileDetails(UserProfile userProfile, int updatedBy, Date updatedDttm) {
        this.userProfile = userProfile;
        this.updatedBy = updatedBy;
        this.updatedDttm = updatedDttm;
    }

    public UserProfileDetails(UserProfile userProfile, String userImageUrl, Character userShowImage, String imageSrc, Character status, Integer createdBy,
                              Date createdDttm, int updatedBy, Date updatedDttm) {
        this.userProfile = userProfile;
        this.userImageUrl = userImageUrl;
        this.userShowImage = userShowImage;
        this.imageSrc = imageSrc;
        this.status = status;
        this.createdBy = createdBy;
        this.createdDttm = createdDttm;
        this.updatedBy = updatedBy;
        this.updatedDttm = updatedDttm;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "USER_PROFILE_DETAILS_SEQ", unique = true, nullable = false)
    public Integer getUserProfileDetailsSeq() {
        return this.userProfileDetailsSeq;
    }

    public void setUserProfileDetailsSeq(Integer userProfileDetailsSeq) {
        this.userProfileDetailsSeq = userProfileDetailsSeq;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "USER_PROFILE_SEQ", nullable = false)
    public UserProfile getUserProfile() {
        return this.userProfile;
    }

    public void setUserProfile(UserProfile userProfile) {
        this.userProfile = userProfile;
    }

    @Column(name = "USER_IMAGE_SUB_DIRECTORY", length = 400)
    public String getUserImageSubDirectory() {
        return userImageSubDirectory;
    }

    public void setUserImageSubDirectory(String userImageSubDirectory) {
        this.userImageSubDirectory = userImageSubDirectory;
    }

    @Column(name = "USER_IMAGE_URL", length = 300)
    public String getUserImageUrl() {
        return this.userImageUrl;
    }

    public void setUserImageUrl(String userImageUrl) {
        this.userImageUrl = userImageUrl;
    }

    @Column(name = "USER_SHOW_IMAGE", length = 1)
    public Character getUserShowImage() {
        return this.userShowImage;
    }

    public void setUserShowImage(Character userShowImage) {
        this.userShowImage = userShowImage;
    }

    @Column(name = "IMAGE_SRC", nullable = false, length = 50)
    public String getImageSrc() {
        return this.imageSrc;
    }

    public void setImageSrc(String imageSrc) {
        this.imageSrc = imageSrc;
    }

    @Column(name = "STATUS", length = 1)
    public Character getStatus() {
        return this.status;
    }

    public void setStatus(Character status) {
        this.status = status;
    }

    @Column(name = "CREATED_BY")
    public Integer getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(Integer createdBy) {
        this.createdBy = createdBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATED_DTTM", length = 19)
    public Date getCreatedDttm() {
        return this.createdDttm;
    }

    public void setCreatedDttm(Date createdDttm) {
        this.createdDttm = createdDttm;
    }

    @Column(name = "UPDATED_BY", nullable = false)
    public int getUpdatedBy() {
        return this.updatedBy;
    }

    public void setUpdatedBy(int updatedBy) {
        this.updatedBy = updatedBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "UPDATED_DTTM", nullable = false, length = 19)
    public Date getUpdatedDttm() {
        return this.updatedDttm;
    }

    public void setUpdatedDttm(Date updatedDttm) {
        this.updatedDttm = updatedDttm;
    }

}
