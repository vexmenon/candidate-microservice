package com.ripplehire.candidate.entities;
// Generated 30 Mar, 2017 11:21:44 AM by Hibernate Tools 5.2.0.CR1



import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Interviewer generated by hbm2java
 */
@Entity
@Table(name = "interviewer")
public class Interviewer implements java.io.Serializable {

	private Integer interviewerSeq;
	private InterviewDetails interviewDetails;
	private UserProfile userProfile;
	private int companyMstrSeq;
	private String interviewToken;
	private Interview interview;
	private char status;
	private int createdBy;
	private Date createDttm;
	private Integer updatedBy;
	private Date updateDttm;
	private Date previousCommentsTimeLimit;
	private Set<InterviewComments> interviewCommentses = new HashSet<InterviewComments>(0);
	private Set<InterviewReviewTask> interviewReviewTasks = new HashSet<InterviewReviewTask>(0);
	private Set<InterviewFeedbackComments> interviewFeedbackCommentses = new HashSet<InterviewFeedbackComments>(0);
	private Set<InterviewScheduleAttendee> interviewScheduleAttendees = new HashSet<InterviewScheduleAttendee>(0);

	public Interviewer() {
	}

	public Interviewer(InterviewDetails interviewDetails, UserProfile userProfile, int companyMstrSeq,
					   String interviewToken, char status, int createdBy, Date createDttm) {
		this.interviewDetails = interviewDetails;
		this.userProfile = userProfile;
		this.companyMstrSeq = companyMstrSeq;
		this.interviewToken = interviewToken;
		this.status = status;
		this.createdBy = createdBy;
		this.createDttm = createDttm;
	}

	public Interviewer(InterviewDetails interviewDetails, UserProfile userProfile, int companyMstrSeq,
					   String interviewToken, char status, int createdBy, Date createDttm, Integer updatedBy, Date updateDttm,
					   Date previousCommentsTimeLimit, Set<InterviewComments> interviewCommentses, Set<Interview> interviews,
					   Set<InterviewReviewTask> interviewReviewTasks, Set<InterviewFeedbackComments> interviewFeedbackCommentses) {
		this.interviewDetails = interviewDetails;
		this.userProfile = userProfile;
		this.companyMstrSeq = companyMstrSeq;
		this.interviewToken = interviewToken;
		this.status = status;
		this.createdBy = createdBy;
		this.createDttm = createDttm;
		this.updatedBy = updatedBy;
		this.updateDttm = updateDttm;
		this.previousCommentsTimeLimit = previousCommentsTimeLimit;
		this.interviewCommentses = interviewCommentses;
		this.interviewReviewTasks = interviewReviewTasks;
		this.interviewFeedbackCommentses = interviewFeedbackCommentses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "INTERVIEWER_SEQ", unique = true, nullable = false)
	public Integer getInterviewerSeq() {
		return this.interviewerSeq;
	}

	public void setInterviewerSeq(Integer interviewerSeq) {
		this.interviewerSeq = interviewerSeq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "INTERVIEW_DETAIL_SEQ", nullable = false)
	public InterviewDetails getInterviewDetails() {
		return this.interviewDetails;
	}

	public void setInterviewDetails(InterviewDetails interviewDetails) {
		this.interviewDetails = interviewDetails;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "USER_PROFILE_SEQ", nullable = false)
	public UserProfile getUserProfile() {
		return this.userProfile;
	}

	public void setUserProfile(UserProfile userProfile) {
		this.userProfile = userProfile;
	}

	@Column(name = "COMPANY_MSTR_SEQ", nullable = false)
	public int getCompanyMstrSeq() {
		return this.companyMstrSeq;
	}

	public void setCompanyMstrSeq(int companyMstrSeq) {
		this.companyMstrSeq = companyMstrSeq;
	}

	@Column(name = "INTERVIEW_TOKEN", nullable = false, length = 200)
	public String getInterviewToken() {
		return this.interviewToken;
	}

	public void setInterviewToken(String interviewToken) {
		this.interviewToken = interviewToken;
	}

	@Column(name = "STATUS", nullable = false, length = 1)
	public char getStatus() {
		return this.status;
	}

	public void setStatus(char status) {
		this.status = status;
	}

	@Column(name = "CREATED_BY", nullable = false)
	public int getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(int createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATE_DTTM", nullable = false, length = 19)
	public Date getCreateDttm() {
		return this.createDttm;
	}

	public void setCreateDttm(Date createDttm) {
		this.createDttm = createDttm;
	}

	@Column(name = "UPDATED_BY")
	public Integer getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATE_DTTM", length = 19)
	public Date getUpdateDttm() {
		return this.updateDttm;
	}

	public void setUpdateDttm(Date updateDttm) {
		this.updateDttm = updateDttm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "PREVIOUS_COMMENTS_TIME_LIMIT", length = 19)
	public Date getPreviousCommentsTimeLimit() {
		return this.previousCommentsTimeLimit;
	}

	public void setPreviousCommentsTimeLimit(Date previousCommentsTimeLimit) {
		this.previousCommentsTimeLimit = previousCommentsTimeLimit;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "interviewer")
	public Set<InterviewComments> getInterviewCommentses() {
		return this.interviewCommentses;
	}

	public void setInterviewCommentses(Set<InterviewComments> interviewCommentses) {
		this.interviewCommentses = interviewCommentses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "interviewer")
	public Set<InterviewReviewTask> getInterviewReviewTasks() {
		return this.interviewReviewTasks;
	}

	public void setInterviewReviewTasks(Set<InterviewReviewTask> interviewReviewTasks) {
		this.interviewReviewTasks = interviewReviewTasks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "interviewer")
	public Set<InterviewFeedbackComments> getInterviewFeedbackCommentses() {
		return this.interviewFeedbackCommentses;
	}

	public void setInterviewFeedbackCommentses(Set<InterviewFeedbackComments> interviewFeedbackCommentses) {
		this.interviewFeedbackCommentses = interviewFeedbackCommentses;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "INTERVIEW_SEQ")
	public Interview getInterview() { 		return interview;	}

	public void setInterview(Interview interview) { 		this.interview = interview;	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "interviewer")
	public Set<InterviewScheduleAttendee> getInterviewScheduleAttendees() {
		return this.interviewScheduleAttendees;
	}

	public void setInterviewScheduleAttendees(Set<InterviewScheduleAttendee> interviewScheduleAttendees) {
		this.interviewScheduleAttendees = interviewScheduleAttendees;
	}
}
