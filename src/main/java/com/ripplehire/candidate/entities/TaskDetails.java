package com.ripplehire.candidate.entities;
// Generated 30 Mar, 2017 11:21:44 AM by Hibernate Tools 5.2.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TaskDetails generated by hbm2java
 */
@Entity
@Table(name = "task_details")
public class TaskDetails implements java.io.Serializable {

    private Integer taskDetailsSeq;
    private TaskStatusMstr taskStatusMstr;
    private TaskTypeMstr taskTypeMstr;
    private UserProfile assignedTo;
    private int companyMstrSeq;
    private Date targetDate;
    private char status;
    private int createdBy;
    private Date createDttm;
    private Integer updatedBy;
    private Date updateDttm;
    private Set<InterviewReviewTask> interviewReviewTasks = new HashSet<InterviewReviewTask>(0);
    private Set<InterviewTask> interviewTasks = new HashSet<InterviewTask>(0);

    public TaskDetails() {
    }

    public TaskDetails(TaskStatusMstr taskStatusMstr, TaskTypeMstr taskTypeMstr, UserProfile assignedTo,
                       int companyMstrSeq, Date targetDate, char status, int createdBy, Date createDttm) {
        this.taskStatusMstr = taskStatusMstr;
        this.taskTypeMstr = taskTypeMstr;
        this.assignedTo = assignedTo;
        this.companyMstrSeq = companyMstrSeq;
        this.targetDate = targetDate;
        this.status = status;
        this.createdBy = createdBy;
        this.createDttm = createDttm;
    }

    public TaskDetails(TaskStatusMstr taskStatusMstr, TaskTypeMstr taskTypeMstr, UserProfile assignedTo,
                       int companyMstrSeq, Date targetDate, char status, int createdBy, Date createDttm, Integer updatedBy,
                       Date updateDttm, Set<InterviewReviewTask> interviewReviewTasks, Set<InterviewTask> interviewTasks) {
        this.taskStatusMstr = taskStatusMstr;
        this.taskTypeMstr = taskTypeMstr;
        this.assignedTo = assignedTo;
        this.companyMstrSeq = companyMstrSeq;
        this.targetDate = targetDate;
        this.status = status;
        this.createdBy = createdBy;
        this.createDttm = createDttm;
        this.updatedBy = updatedBy;
        this.updateDttm = updateDttm;
        this.interviewReviewTasks = interviewReviewTasks;
        this.interviewTasks = interviewTasks;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "TASK_DETAILS_SEQ", unique = true, nullable = false)
    public Integer getTaskDetailsSeq() {
        return this.taskDetailsSeq;
    }

    public void setTaskDetailsSeq(Integer taskDetailsSeq) {
        this.taskDetailsSeq = taskDetailsSeq;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "TASK_STATUS_MSTR_SEQ", nullable = false)
    public TaskStatusMstr getTaskStatusMstr() {
        return this.taskStatusMstr;
    }

    public void setTaskStatusMstr(TaskStatusMstr taskStatusMstr) {
        this.taskStatusMstr = taskStatusMstr;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "TASK_TYPE_MSTR_SEQ", nullable = false)
    public TaskTypeMstr getTaskTypeMstr() {
        return this.taskTypeMstr;
    }

    public void setTaskTypeMstr(TaskTypeMstr taskTypeMstr) {
        this.taskTypeMstr = taskTypeMstr;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ASSIGNED_TO", nullable = false)
    public UserProfile getAssignedTo() {
        return assignedTo;
    }

    public void setAssignedTo(UserProfile assignedTo) {
        this.assignedTo = assignedTo;
    }

    @Column(name = "COMPANY_MSTR_SEQ", nullable = false)
    public int getCompanyMstrSeq() {
        return this.companyMstrSeq;
    }

    public void setCompanyMstrSeq(int companyMstrSeq) {
        this.companyMstrSeq = companyMstrSeq;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "TARGET_DATE", nullable = false, length = 19)
    public Date getTargetDate() {
        return this.targetDate;
    }

    public void setTargetDate(Date targetDate) {
        this.targetDate = targetDate;
    }

    @Column(name = "STATUS", nullable = false, length = 1)
    public char getStatus() {
        return this.status;
    }

    public void setStatus(char status) {
        this.status = status;
    }

    @Column(name = "CREATED_BY", nullable = false)
    public int getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(int createdBy) {
        this.createdBy = createdBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATE_DTTM", nullable = false, length = 19)
    public Date getCreateDttm() {
        return this.createDttm;
    }

    public void setCreateDttm(Date createDttm) {
        this.createDttm = createDttm;
    }

    @Column(name = "UPDATED_BY")
    public Integer getUpdatedBy() {
        return this.updatedBy;
    }

    public void setUpdatedBy(Integer updatedBy) {
        this.updatedBy = updatedBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "UPDATE_DTTM", length = 19)
    public Date getUpdateDttm() {
        return this.updateDttm;
    }

    public void setUpdateDttm(Date updateDttm) {
        this.updateDttm = updateDttm;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "taskDetails")
    public Set<InterviewReviewTask> getInterviewReviewTasks() {
        return this.interviewReviewTasks;
    }

    public void setInterviewReviewTasks(Set<InterviewReviewTask> interviewReviewTasks) {
        this.interviewReviewTasks = interviewReviewTasks;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "taskDetails")
    public Set<InterviewTask> getInterviewTasks() {
        return this.interviewTasks;
    }

    public void setInterviewTasks(Set<InterviewTask> interviewTasks) {
        this.interviewTasks = interviewTasks;
    }

}