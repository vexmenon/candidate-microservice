package com.ripplehire.candidate.entities;

// Generated Mar 6, 2014 7:42:21 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * RewardBadge generated by hbm2java
 */
@Entity
@Table(name = "reward_badge")
public class RewardBadge implements java.io.Serializable {

	private Integer rewardBadgeSeq;
	private Reward reward;
	private int companyMstrSeq;
	private String badgeCd;
	private String badgeLbl;
	private String badgeDesc;
	private String badgeImg;
	private char status;
	private int createdBy;
	private Date createdDttm;
	private Integer updatedBy;
	private Date updatedDttm;
	private Set<EmplBadge> emplBadges = new HashSet<EmplBadge>(0);
	private Set<RewardBadgeLang> rewardBadgeLangs = new HashSet<RewardBadgeLang>(
			0);

	public RewardBadge() {
	}

	public RewardBadge(Reward reward, int companyMstrSeq, char status,
			int createdBy, Date createdDttm) {
		this.reward = reward;
		this.companyMstrSeq = companyMstrSeq;
		this.status = status;
		this.createdBy = createdBy;
		this.createdDttm = createdDttm;
	}

	public RewardBadge(Reward reward, int companyMstrSeq, String badgeCd,
			String badgeLbl, String badgeDesc, String badgeImg, char status,
			int createdBy, Date createdDttm, Integer updatedBy,
			Date updatedDttm, Set<EmplBadge> emplBadges,
			Set<RewardBadgeLang> rewardBadgeLangs) {
		this.reward = reward;
		this.companyMstrSeq = companyMstrSeq;
		this.badgeCd = badgeCd;
		this.badgeLbl = badgeLbl;
		this.badgeDesc = badgeDesc;
		this.badgeImg = badgeImg;
		this.status = status;
		this.createdBy = createdBy;
		this.createdDttm = createdDttm;
		this.updatedBy = updatedBy;
		this.updatedDttm = updatedDttm;
		this.emplBadges = emplBadges;
		this.rewardBadgeLangs = rewardBadgeLangs;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "REWARD_BADGE_SEQ", unique = true, nullable = false)
	public Integer getRewardBadgeSeq() {
		return this.rewardBadgeSeq;
	}

	public void setRewardBadgeSeq(Integer rewardBadgeSeq) {
		this.rewardBadgeSeq = rewardBadgeSeq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "REWARD_SEQ", nullable = false)
	public Reward getReward() {
		return this.reward;
	}

	public void setReward(Reward reward) {
		this.reward = reward;
	}

	@Column(name = "COMPANY_MSTR_SEQ", nullable = false)
	public int getCompanyMstrSeq() {
		return this.companyMstrSeq;
	}

	public void setCompanyMstrSeq(int companyMstrSeq) {
		this.companyMstrSeq = companyMstrSeq;
	}

	@Column(name = "BADGE_CD", length = 20)
	public String getBadgeCd() {
		return this.badgeCd;
	}

	public void setBadgeCd(String badgeCd) {
		this.badgeCd = badgeCd;
	}

	@Column(name = "BADGE_LBL", length = 50)
	public String getBadgeLbl() {
		return this.badgeLbl;
	}

	public void setBadgeLbl(String badgeLbl) {
		this.badgeLbl = badgeLbl;
	}

	@Column(name = "BADGE_DESC")
	public String getBadgeDesc() {
		return this.badgeDesc;
	}

	public void setBadgeDesc(String badgeDesc) {
		this.badgeDesc = badgeDesc;
	}

	@Column(name = "BADGE_IMG", length = 50)
	public String getBadgeImg() {
		return this.badgeImg;
	}

	public void setBadgeImg(String badgeImg) {
		this.badgeImg = badgeImg;
	}

	@Column(name = "STATUS", nullable = false, length = 1)
	public char getStatus() {
		return this.status;
	}

	public void setStatus(char status) {
		this.status = status;
	}

	@Column(name = "CREATED_BY", nullable = false)
	public int getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(int createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DTTM", nullable = false, length = 19)
	public Date getCreatedDttm() {
		return this.createdDttm;
	}

	public void setCreatedDttm(Date createdDttm) {
		this.createdDttm = createdDttm;
	}

	@Column(name = "UPDATED_BY")
	public Integer getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATED_DTTM", length = 19)
	public Date getUpdatedDttm() {
		return this.updatedDttm;
	}

	public void setUpdatedDttm(Date updatedDttm) {
		this.updatedDttm = updatedDttm;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rewardBadge")
	public Set<EmplBadge> getEmplBadges() {
		return this.emplBadges;
	}

	public void setEmplBadges(Set<EmplBadge> emplBadges) {
		this.emplBadges = emplBadges;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rewardBadge")
	public Set<RewardBadgeLang> getRewardBadgeLangs() {
		return this.rewardBadgeLangs;
	}

	public void setRewardBadgeLangs(Set<RewardBadgeLang> rewardBadgeLangs) {
		this.rewardBadgeLangs = rewardBadgeLangs;
	}

}
